version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - db
    environment:
      # Change to prod in production
      - SYMFONY_ENV=prod
      - HTTP_PASSWORD=pw
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=malunki
      - DB_USER=root
      - DB_PASSWORD=malunki
      - SENDGRID_API_KEY=add-key
      - MAIL_RECIPIENT=me@example.com
      - CORS_ALLOW_ORIGIN=http://malunki.localhost
      - LOCALE=en
      - SECRET=secret
    volumes:
      # Comment out the next line in production
     # - ./:/srv/api-platform:rw
      # This is for assets:install
      - ./web:/srv/api-platform/web:rw
      # If you develop on Linux, comment out the following volumes to just use bind-mounted project directory from host
      #- /srv/api-platform/var
      #- /srv/api-platform/var/cache
      #- /srv/api-platform/var/logs
      #- /srv/api-platform/var/sessions
      #- /srv/api-platform/vendor
  db:
    build:
      context: ./docker/db
      dockerfile: ./Dockerfile
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=malunki
      - MYSQL_DATABASE=malunki
      - MYSQL_PASSWORD=malunki
      - MYSQL_USER=malunki
    volumes:
      - db-data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: ./Dockerfile
    expose:
        - "80"
    volumes:
      # Comment out the next line in production
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./web:/srv/api-platform/web:ro

volumes:
  app-web: {}
  db-data: {}
